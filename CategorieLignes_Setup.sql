-- ================================================================
-- SCRIPT SQL POUR LA TABLE CategorieLignes
-- Base de donn√©es : CT_CNEH_DB
-- ================================================================

USE CT_CNEH_DB;
GO

-- ================================================================
-- 1. V√âRIFIER ET CR√âER LA TABLE CategorieLignes SI N√âCESSAIRE
-- ================================================================

IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'CategorieLignes')
BEGIN
    PRINT 'üîß Cr√©ation de la table CategorieLignes...';
    
    CREATE TABLE CategorieLignes (
        Id INT IDENTITY(1,1) PRIMARY KEY,
        Libelle NVARCHAR(255) NOT NULL,
        Code NVARCHAR(50) NOT NULL UNIQUE,
        Description NVARCHAR(500) NULL,
        DateCreation DATETIME2 DEFAULT GETDATE(),
        DateModification DATETIME2 DEFAULT GETDATE(),
        EstActif BIT DEFAULT 1
    );
    
    PRINT '‚úÖ Table CategorieLignes cr√©√©e avec succ√®s !';
END
ELSE
BEGIN
    PRINT '‚úÖ La table CategorieLignes existe d√©j√†.';
END

-- ================================================================
-- 2. VIDER LA TABLE (OPTIONNEL - D√âCOMMENTEZ SI N√âCESSAIRE)
-- ================================================================

-- DELETE FROM CategorieLignes;
-- PRINT 'üóëÔ∏è Table CategorieLignes vid√©e.';

-- ================================================================
-- 3. INS√âRER LES CAT√âGORIES DE LIGNES
-- ================================================================

PRINT 'üìù Insertion des cat√©gories de lignes...';

-- V√©rifier si des donn√©es existent d√©j√†
IF NOT EXISTS (SELECT 1 FROM CategorieLignes)
BEGIN
    INSERT INTO CategorieLignes (Libelle, Code, Description)
    VALUES
        ('V√©hicules l√©gers (VL)', 'VL', 'voitures particuli√®res, utilitaires ‚â§ 3,5T'),
        ('Poids lourds (PL)', 'PL', 'camions, bus, v√©hicules > 3,5T'),
        ('Motocycles', 'MOTO', 'motos et cyclomoteurs'),
        ('V√©hicules toute cat√©gorie', 'VTC', 'ligne polyvalente');
    
    PRINT '‚úÖ Cat√©gories ins√©r√©es avec succ√®s !';
    PRINT 'üìä Nombre de cat√©gories ins√©r√©es : ' + CAST(@@ROWCOUNT AS VARCHAR(10));
END
ELSE
BEGIN
    PRINT '‚ö†Ô∏è Des cat√©gories existent d√©j√† dans la table.';
    PRINT 'üí° Pour r√©ins√©rer, d√©commentez la section "VIDER LA TABLE" ci-dessus.';
END

-- ================================================================
-- 4. V√âRIFICATION ET AFFICHAGE DES DONN√âES
-- ================================================================

PRINT 'üîç V√©rification des donn√©es ins√©r√©es :';

SELECT 
    Id,
    Libelle,
    Code,
    Description,
    DateCreation,
    EstActif
FROM CategorieLignes
ORDER BY Id;

-- ================================================================
-- 5. STATISTIQUES
-- ================================================================

DECLARE @TotalCategories INT = (SELECT COUNT(*) FROM CategorieLignes WHERE EstActif = 1);
PRINT 'üìà STATISTIQUES :';
PRINT '   - Total cat√©gories actives : ' + CAST(@TotalCategories AS VARCHAR(10));

-- ================================================================
-- 6. V√âRIFICATION DE L'API ENDPOINT
-- ================================================================

PRINT 'üåê ENDPOINT API CONFIGUR√â :';
PRINT '   - GET /api/CategorieLignes';
PRINT '   - Table source : CT_CNEH_DB.dbo.CategorieLignes';

PRINT '‚úÖ Configuration termin√©e avec succ√®s !';
PRINT 'üöÄ Vous pouvez maintenant tester l''API /CategorieLignes';

GO


