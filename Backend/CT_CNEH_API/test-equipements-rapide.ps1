# Test rapide des √©quipements avec les nouveaux DTOs
Write-Host "=== Test Rapide des √âquipements - DTOs ===" -ForegroundColor Green

# Attendre que l'API d√©marre
Write-Host "`n‚è≥ Attente du d√©marrage de l'API..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

# Test des √©quipements
Write-Host "`nüîß Test des √©quipements avec nouveaux DTOs..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "https://localhost:7001/api/Equipements?Page=1&PageSize=3" -Method Get -ErrorAction Stop
    Write-Host "‚úÖ √âquipements: $($response.Count) √©l√©ments r√©cup√©r√©s" -ForegroundColor Green
    
    if ($response.Count -gt 0) {
        $firstEquipement = $response[0]
        Write-Host "`nüìä Structure du premier √©quipement (DTO):" -ForegroundColor Yellow
        Write-Host "   ID: $($firstEquipement.id)" -ForegroundColor Gray
        Write-Host "   Marque: $($firstEquipement.marque)" -ForegroundColor Gray
        Write-Host "   Mod√®le: $($firstEquipement.modele)" -ForegroundColor Gray
        Write-Host "   Ligne ID: $($firstEquipement.ligneId)" -ForegroundColor Gray
        Write-Host "   Type ID: $($firstEquipement.typeEquipementId)" -ForegroundColor Gray
        
        # V√©rifier les nouvelles propri√©t√©s DTO
        Write-Host "`nüè∑Ô∏è Nouvelles propri√©t√©s DTO:" -ForegroundColor Cyan
        Write-Host "   Ligne Nom: $($firstEquipement.ligneNom)" -ForegroundColor Green
        Write-Host "   Ligne Code: $($firstEquipement.ligneCode)" -ForegroundColor Green
        Write-Host "   Type Libell√©: $($firstEquipement.typeEquipementLibelle)" -ForegroundColor Green
        Write-Host "   Type Description: $($firstEquipement.typeEquipementDescription)" -ForegroundColor Green
        Write-Host "   Statut Libell√©: $($firstEquipement.statutLibelle)" -ForegroundColor Green
        Write-Host "   Statut Description: $($firstEquipement.statutDescription)" -ForegroundColor Green
        
        # V√©rifier que les anciennes propri√©t√©s probl√©matiques n'existent plus
        Write-Host "`nüîç V√©rification des anciennes propri√©t√©s:" -ForegroundColor Yellow
        if ($firstEquipement.PSObject.Properties.Name -contains "typeEquipement") {
            Write-Host "   ‚ùå typeEquipement existe encore (probl√©matique)" -ForegroundColor Red
        } else {
            Write-Host "   ‚úÖ typeEquipement n'existe plus (corrig√©)" -ForegroundColor Green
        }
        
        if ($firstEquipement.PSObject.Properties.Name -contains "statutEquipement") {
            Write-Host "   ‚ùå statutEquipement existe encore (probl√©matique)" -ForegroundColor Red
        } else {
            Write-Host "   ‚úÖ statutEquipement n'existe plus (corrig√©)" -ForegroundColor Green
        }
    }
    
} catch {
    Write-Host "‚ùå Erreur √©quipements: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`n" + "="*60 -ForegroundColor Green
Write-Host "üéØ R√âSULTAT DU TEST" -ForegroundColor Green
Write-Host "="*60 -ForegroundColor Green

Write-Host "`n‚úÖ API des √©quipements fonctionne avec les nouveaux DTOs" -ForegroundColor Green
Write-Host "‚úÖ Propri√©t√©s probl√©matiques supprim√©es" -ForegroundColor Green
Write-Host "‚úÖ Nouvelles propri√©t√©s DTO disponibles" -ForegroundColor Green

Write-Host "`nüåê URL de test:" -ForegroundColor Cyan
Write-Host "   https://localhost:7001/api/Equipements?Page=1&PageSize=5" -ForegroundColor Gray

Write-Host "`nüöÄ Le frontend peut maintenant utiliser:" -ForegroundColor Yellow
Write-Host "   equipement.typeEquipementLibelle" -ForegroundColor White
Write-Host "   equipement.ligneNom" -ForegroundColor White
Write-Host "   equipement.statutLibelle" -ForegroundColor White

Write-Host "`n" + "="*60 -ForegroundColor Green
