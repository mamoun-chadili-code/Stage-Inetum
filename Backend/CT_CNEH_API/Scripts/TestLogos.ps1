# Script pour tester la gestion des logos
# Ex√©cuter ce script apr√®s avoir d√©marr√© le backend

Write-Host "Test de la gestion des logos..." -ForegroundColor Green

# Attendre que le backend d√©marre
Write-Host "Attendre que le backend d√©marre..." -ForegroundColor Yellow
Start-Sleep -Seconds 5

# Test 1: V√©rifier que les dossiers existent
Write-Host "`n1. V√©rification des dossiers..." -ForegroundColor Cyan
$projectRoot = Split-Path -Parent $PSScriptRoot
$wwwrootPath = Join-Path $projectRoot "wwwroot"
$uploadsPath = Join-Path $wwwrootPath "uploads"
$logosPath = Join-Path $uploadsPath "logos"

Write-Host "üìÅ wwwroot: $(if (Test-Path $wwwrootPath) { '‚úì Existe' } else { '‚ùå Manquant' })" -ForegroundColor White
Write-Host "üìÅ uploads: $(if (Test-Path $uploadsPath) { '‚úì Existe' } else { '‚ùå Manquant' })" -ForegroundColor White
Write-Host "üìÅ logos: $(if (Test-Path $logosPath) { '‚úì Existe' } else { '‚ùå Manquant' })" -ForegroundColor White

# Test 2: V√©rifier que les images de test existent
Write-Host "`n2. V√©rification des images de test..." -ForegroundColor Cyan
$testLogos = @("logo_reseau_nord.png", "logo_reseau_centre.png")
foreach ($logo in $testLogos) {
    $logoPath = Join-Path $logosPath $logo
    $exists = Test-Path $logoPath
    Write-Host "üìÑ $logo: $(if ($exists) { '‚úì Existe' } else { '‚ùå Manquant' })" -ForegroundColor White
}

# Test 3: Tester l'API des logos (si le backend est d√©marr√©)
Write-Host "`n3. Test de l'API des logos..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "http://localhost:7000/api/Logos/reseau/1" -Method GET -SkipCertificateCheck
    Write-Host "‚úì API Logos accessible" -ForegroundColor Green
    Write-Host "  Logos trouv√©s: $($response.Count)" -ForegroundColor White
} catch {
    Write-Host "‚ùå API Logos non accessible: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 4: Tester l'API des r√©seaux
Write-Host "`n4. Test de l'API des r√©seaux..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "http://localhost:7000/api/Reseaux" -Method GET -SkipCertificateCheck
    Write-Host "‚úì API Reseaux accessible" -ForegroundColor Green
    Write-Host "  R√©seaux trouv√©s: $($response.Count)" -ForegroundColor White
    
    # V√©rifier les logos des r√©seaux
    foreach ($reseau in $response) {
        if ($reseau.logoUrl) {
            Write-Host "  üìÑ $($reseau.nom): $($reseau.logoUrl)" -ForegroundColor White
        } else {
            Write-Host "  ‚ùå $($reseau.nom): Pas de logo" -ForegroundColor Yellow
        }
    }
} catch {
    Write-Host "‚ùå API Reseaux non accessible: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nTest termin√© !" -ForegroundColor Green


