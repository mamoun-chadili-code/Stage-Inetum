// <auto-generated />
using System;
using CT_CNEH_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CT_CNEH_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250812040645_CleanLigneStructure")]
    partial class CleanLigneStructure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CT_CNEH_API.Models.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adresse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AnneeAutorisation")
                        .HasColumnType("int");

                    b.Property<int?>("CCTId")
                        .HasColumnType("int");

                    b.Property<string>("CIN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CNSS")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CategorieCAPId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAffectationCCT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCAP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDecisionRenouv")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExpirationCAP")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumDecisionRenouv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCAP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StatutAdministratifId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CCTId");

                    b.HasIndex("CategorieCAPId");

                    b.HasIndex("StatutAdministratifId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.CadreAutorisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CadreAutorisations");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.CategorieCCT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Libelle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CategorieCCTs");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.CategorieLigne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Libelle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CategorieLignes");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.CCT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdresseCCT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdresseDomiciliation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdresseSiege")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agrement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CadreAutorisationId")
                        .HasColumnType("int");

                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAgrement")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRalliement")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStatut")
                        .HasColumnType("datetime2");

                    b.Property<string>("EngagementSpecifique")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdFiscal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPersonneMorale")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int?>("QuotaPL")
                        .HasColumnType("int");

                    b.Property<int?>("QuotaVL")
                        .HasColumnType("int");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<int>("ReseauId")
                        .HasColumnType("int");

                    b.Property<int>("StatutId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThumbprintCertificat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("VilleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CadreAutorisationId");

                    b.HasIndex("CategorieId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("RegionId");

                    b.HasIndex("ReseauId");

                    b.HasIndex("StatutId");

                    b.HasIndex("TypeId");

                    b.HasIndex("VilleId");

                    b.ToTable("CCTs");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.ChefCentre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnneeAutorisation")
                        .HasColumnType("int");

                    b.Property<int?>("CCTId")
                        .HasColumnType("int");

                    b.Property<string>("CIN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CNSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAffectationCCT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApprobationCNEH")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NiveauFormationInitialId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceApprobationCNEH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Sexe")
                        .HasColumnType("bit");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CCTId");

                    b.HasIndex("NiveauFormationInitialId");

                    b.ToTable("ChefCentres");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.CibleFormation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CibleFormations");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Descision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<int?>("CCTId")
                        .HasColumnType("int");

                    b.Property<int?>("ChefCentreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LienDocument")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("LigneId")
                        .HasColumnType("int");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReseauId")
                        .HasColumnType("int");

                    b.Property<int>("TypeEntiteId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("CCTId");

                    b.HasIndex("ChefCentreId");

                    b.HasIndex("LigneId");

                    b.HasIndex("ReseauId");

                    b.HasIndex("TypeEntiteId");

                    b.HasIndex("TypeId");

                    b.ToTable("Decisions");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Equipement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdresseSocieteEtalonnage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CCTCreationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateEtalonnage")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExpirationEtalonnage")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateHomologation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateMiseService")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdEquipement")
                        .IsRequired()
                        .HasMaxLength(355)
                        .HasColumnType("nvarchar(355)");

                    b.Property<int?>("LigneId")
                        .HasColumnType("int");

                    b.Property<string>("Marque")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modele")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Protocole")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferenceHomologation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SocieteEtalonnage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelSocieteEtalonnage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CCTCreationId");

                    b.HasIndex("LigneId");

                    b.HasIndex("TypeId");

                    b.ToTable("Equipements");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Formation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<int?>("CCTId")
                        .HasColumnType("int");

                    b.Property<int?>("ChefCentreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeuxiemeAnimateur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Intitule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LexiqueFormationId")
                        .HasColumnType("int");

                    b.Property<string>("Matiere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PremierAnimateur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeFormationId")
                        .HasColumnType("int");

                    b.Property<bool>("ValideCHEH")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ValideLe")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ValideParFormateur")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("CCTId");

                    b.HasIndex("ChefCentreId");

                    b.HasIndex("LexiqueFormationId");

                    b.HasIndex("TypeFormationId");

                    b.ToTable("Formations");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.HistoriqueCCT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CCTId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReseauId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CCTId");

                    b.HasIndex("ReseauId");

                    b.ToTable("HistoriqueCCTs");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.LexiqueFormation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CibleFormationId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NombreHeures")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CibleFormationId");

                    b.ToTable("LexiqueFormation");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Ligne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CCTId")
                        .HasColumnType("int");

                    b.Property<int?>("CategorieCCTId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateStatut")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DecisionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumLigne")
                        .HasColumnType("int");

                    b.Property<int>("StatutId")
                        .HasColumnType("int");

                    b.Property<int>("TypeLigneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CCTId");

                    b.HasIndex("CategorieCCTId");

                    b.HasIndex("StatutId");

                    b.HasIndex("TypeLigneId");

                    b.ToTable("Lignes");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.NiveauFormation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cible")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("NiveauFormations");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Reseau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdressRepresentantLegal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdresseDomiciliation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdresseSiege")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agrement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CadreAutorisationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAgrement")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStatut")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdFiscal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailRepresentant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NomRepresentantLegal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterCommerce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatutId")
                        .HasColumnType("int");

                    b.Property<int?>("StatutRCId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelRepresentantLegal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThumbprintCertificat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VilleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CadreAutorisationId");

                    b.HasIndex("StatutId");

                    b.HasIndex("StatutRCId");

                    b.HasIndex("VilleId");

                    b.ToTable("Reseaux");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.StatutAdministratif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime2");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("StatutAdministratifs");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.StatutLigne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Libelle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("StatutLignes");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.StatutRC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("StatutRCs");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.TypeCTT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TypeCTTs");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.TypeDecision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsSanction")
                        .HasColumnType("bit");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TypeDecisions");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.TypeEntite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Libelle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TypeEntites");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.TypeEquipement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Etalonnable")
                        .HasColumnType("bit");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TypeEquipements");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.TypeFormation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypesFormation");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Ville", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Villes");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Agent", b =>
                {
                    b.HasOne("CT_CNEH_API.Models.CCT", "CCT")
                        .WithMany("Agents")
                        .HasForeignKey("CCTId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CT_CNEH_API.Models.CategorieCCT", "CategorieCAP")
                        .WithMany("Agents")
                        .HasForeignKey("CategorieCAPId");

                    b.HasOne("CT_CNEH_API.Models.StatutAdministratif", "StatutAdministratif")
                        .WithMany("Agents")
                        .HasForeignKey("StatutAdministratifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CCT");

                    b.Navigation("CategorieCAP");

                    b.Navigation("StatutAdministratif");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.CCT", b =>
                {
                    b.HasOne("CT_CNEH_API.Models.CadreAutorisation", "CadreAutorisation")
                        .WithMany("CCTs")
                        .HasForeignKey("CadreAutorisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CT_CNEH_API.Models.CategorieCCT", "Categorie")
                        .WithMany("CCTs")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CT_CNEH_API.Models.Province", "Province")
                        .WithMany("CCTs")
                        .HasForeignKey("ProvinceId");

                    b.HasOne("CT_CNEH_API.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.HasOne("CT_CNEH_API.Models.Reseau", "Reseau")
                        .WithMany("CCTs")
                        .HasForeignKey("ReseauId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CT_CNEH_API.Models.StatutRC", "Statut")
                        .WithMany("CCTs")
                        .HasForeignKey("StatutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CT_CNEH_API.Models.TypeCTT", "Type")
                        .WithMany("CCTs")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CT_CNEH_API.Models.Ville", "Ville")
                        .WithMany("CCTs")
                        .HasForeignKey("VilleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CadreAutorisation");

                    b.Navigation("Categorie");

                    b.Navigation("Province");

                    b.Navigation("Region");

                    b.Navigation("Reseau");

                    b.Navigation("Statut");

                    b.Navigation("Type");

                    b.Navigation("Ville");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.ChefCentre", b =>
                {
                    b.HasOne("CT_CNEH_API.Models.CCT", "CCT")
                        .WithMany("ChefsCentres")
                        .HasForeignKey("CCTId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CT_CNEH_API.Models.NiveauFormation", "NiveauFormationInitial")
                        .WithMany("ChefsCentres")
                        .HasForeignKey("NiveauFormationInitialId");

                    b.Navigation("CCT");

                    b.Navigation("NiveauFormationInitial");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Descision", b =>
                {
                    b.HasOne("CT_CNEH_API.Models.Agent", "Agent")
                        .WithMany("Decisions")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CT_CNEH_API.Models.CCT", "CCT")
                        .WithMany("Decisions")
                        .HasForeignKey("CCTId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CT_CNEH_API.Models.ChefCentre", "ChefCentre")
                        .WithMany("Decisions")
                        .HasForeignKey("ChefCentreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CT_CNEH_API.Models.Ligne", "Ligne")
                        .WithMany("Decisions")
                        .HasForeignKey("LigneId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CT_CNEH_API.Models.Reseau", "Reseau")
                        .WithMany("Decisions")
                        .HasForeignKey("ReseauId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CT_CNEH_API.Models.TypeEntite", "TypeEntite")
                        .WithMany("Decisions")
                        .HasForeignKey("TypeEntiteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CT_CNEH_API.Models.TypeDecision", "Type")
                        .WithMany("Decisions")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("CCT");

                    b.Navigation("ChefCentre");

                    b.Navigation("Ligne");

                    b.Navigation("Reseau");

                    b.Navigation("Type");

                    b.Navigation("TypeEntite");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Equipement", b =>
                {
                    b.HasOne("CT_CNEH_API.Models.CCT", "CCTCreation")
                        .WithMany("Equipements")
                        .HasForeignKey("CCTCreationId");

                    b.HasOne("CT_CNEH_API.Models.Ligne", "Ligne")
                        .WithMany("Equipements")
                        .HasForeignKey("LigneId");

                    b.HasOne("CT_CNEH_API.Models.TypeEquipement", "Type")
                        .WithMany("Equipements")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CCTCreation");

                    b.Navigation("Ligne");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Formation", b =>
                {
                    b.HasOne("CT_CNEH_API.Models.Agent", "Agent")
                        .WithMany("Formations")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CT_CNEH_API.Models.CCT", "CCT")
                        .WithMany("Formations")
                        .HasForeignKey("CCTId");

                    b.HasOne("CT_CNEH_API.Models.ChefCentre", "ChefCentre")
                        .WithMany("Formations")
                        .HasForeignKey("ChefCentreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CT_CNEH_API.Models.LexiqueFormation", null)
                        .WithMany("Formations")
                        .HasForeignKey("LexiqueFormationId");

                    b.HasOne("CT_CNEH_API.Models.TypeFormation", "TypeFormation")
                        .WithMany("Formations")
                        .HasForeignKey("TypeFormationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("CCT");

                    b.Navigation("ChefCentre");

                    b.Navigation("TypeFormation");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.HistoriqueCCT", b =>
                {
                    b.HasOne("CT_CNEH_API.Models.CCT", "CCT")
                        .WithMany()
                        .HasForeignKey("CCTId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CT_CNEH_API.Models.Reseau", "Reseau")
                        .WithMany()
                        .HasForeignKey("ReseauId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CCT");

                    b.Navigation("Reseau");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.LexiqueFormation", b =>
                {
                    b.HasOne("CT_CNEH_API.Models.CibleFormation", "CibleFormation")
                        .WithMany("LexiqueFormations")
                        .HasForeignKey("CibleFormationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CibleFormation");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Ligne", b =>
                {
                    b.HasOne("CT_CNEH_API.Models.CCT", "CCT")
                        .WithMany("Lignes")
                        .HasForeignKey("CCTId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CT_CNEH_API.Models.CategorieCCT", null)
                        .WithMany("Lignes")
                        .HasForeignKey("CategorieCCTId");

                    b.HasOne("CT_CNEH_API.Models.StatutLigne", "Statut")
                        .WithMany("Lignes")
                        .HasForeignKey("StatutId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CT_CNEH_API.Models.CategorieLigne", "TypeLigne")
                        .WithMany("Lignes")
                        .HasForeignKey("TypeLigneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CCT");

                    b.Navigation("Statut");

                    b.Navigation("TypeLigne");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Province", b =>
                {
                    b.HasOne("CT_CNEH_API.Models.Region", "Region")
                        .WithMany("Provinces")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Reseau", b =>
                {
                    b.HasOne("CT_CNEH_API.Models.CadreAutorisation", "CadreAutorisation")
                        .WithMany("Reseaux")
                        .HasForeignKey("CadreAutorisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CT_CNEH_API.Models.StatutRC", "Statut")
                        .WithMany()
                        .HasForeignKey("StatutId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CT_CNEH_API.Models.StatutRC", null)
                        .WithMany("Reseaux")
                        .HasForeignKey("StatutRCId");

                    b.HasOne("CT_CNEH_API.Models.Ville", "Ville")
                        .WithMany("Reseaux")
                        .HasForeignKey("VilleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CadreAutorisation");

                    b.Navigation("Statut");

                    b.Navigation("Ville");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Ville", b =>
                {
                    b.HasOne("CT_CNEH_API.Models.Region", "Region")
                        .WithMany("Villes")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Region");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Agent", b =>
                {
                    b.Navigation("Decisions");

                    b.Navigation("Formations");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.CadreAutorisation", b =>
                {
                    b.Navigation("CCTs");

                    b.Navigation("Reseaux");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.CategorieCCT", b =>
                {
                    b.Navigation("Agents");

                    b.Navigation("CCTs");

                    b.Navigation("Lignes");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.CategorieLigne", b =>
                {
                    b.Navigation("Lignes");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.CCT", b =>
                {
                    b.Navigation("Agents");

                    b.Navigation("ChefsCentres");

                    b.Navigation("Decisions");

                    b.Navigation("Equipements");

                    b.Navigation("Formations");

                    b.Navigation("Lignes");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.ChefCentre", b =>
                {
                    b.Navigation("Decisions");

                    b.Navigation("Formations");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.CibleFormation", b =>
                {
                    b.Navigation("LexiqueFormations");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.LexiqueFormation", b =>
                {
                    b.Navigation("Formations");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Ligne", b =>
                {
                    b.Navigation("Decisions");

                    b.Navigation("Equipements");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.NiveauFormation", b =>
                {
                    b.Navigation("ChefsCentres");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Province", b =>
                {
                    b.Navigation("CCTs");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Region", b =>
                {
                    b.Navigation("Provinces");

                    b.Navigation("Villes");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Reseau", b =>
                {
                    b.Navigation("CCTs");

                    b.Navigation("Decisions");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.StatutAdministratif", b =>
                {
                    b.Navigation("Agents");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.StatutLigne", b =>
                {
                    b.Navigation("Lignes");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.StatutRC", b =>
                {
                    b.Navigation("CCTs");

                    b.Navigation("Reseaux");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.TypeCTT", b =>
                {
                    b.Navigation("CCTs");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.TypeDecision", b =>
                {
                    b.Navigation("Decisions");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.TypeEntite", b =>
                {
                    b.Navigation("Decisions");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.TypeEquipement", b =>
                {
                    b.Navigation("Equipements");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.TypeFormation", b =>
                {
                    b.Navigation("Formations");
                });

            modelBuilder.Entity("CT_CNEH_API.Models.Ville", b =>
                {
                    b.Navigation("CCTs");

                    b.Navigation("Reseaux");
                });
#pragma warning restore 612, 618
        }
    }
}
