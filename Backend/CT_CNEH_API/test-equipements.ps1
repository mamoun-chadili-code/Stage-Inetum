# Test sp√©cifique des √©quipements pour diagnostiquer le probl√®me frontend
Write-Host "=== Test des √âquipements - Diagnostic Frontend ===" -ForegroundColor Green
Write-Host "Date: $(Get-Date)" -ForegroundColor Yellow

# Attendre que l'API d√©marre
Write-Host "`n‚è≥ Attente du d√©marrage de l'API..." -ForegroundColor Yellow
Start-Sleep -Seconds 15

# Test 1: Endpoint de sant√©
Write-Host "`nüè• Test 1: Endpoint de sant√©..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "https://localhost:7001/api/Health" -Method Get -ErrorAction Stop
    Write-Host "‚úÖ API en bonne sant√©: $($response.status)" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur sant√©: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# Test 2: Endpoint des √©quipements
Write-Host "`nüîß Test 2: Endpoint des √©quipements..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "https://localhost:7001/api/Equipements?Page=1&PageSize=10" -Method Get -ErrorAction Stop
    Write-Host "‚úÖ √âquipements: $($response.Count) √©l√©ments r√©cup√©r√©s" -ForegroundColor Green
    
    # Analyser la structure des donn√©es
    if ($response.Count -gt 0) {
        $firstEquipement = $response[0]
        Write-Host "`nüìä Structure du premier √©quipement:" -ForegroundColor Yellow
        Write-Host "   ID: $($firstEquipement.id)" -ForegroundColor Gray
        Write-Host "   Nom: $($firstEquipement.nom)" -ForegroundColor Gray
        Write-Host "   Type: $($firstEquipement.typeEquipementId)" -ForegroundColor Gray
        
        # V√©rifier si les propri√©t√©s li√©es existent
        if ($firstEquipement.typeEquipement) {
            Write-Host "   Type Libell√©: $($firstEquipement.typeEquipement.libelle)" -ForegroundColor Green
        } else {
            Write-Host "   ‚ùå Type Equipement: NULL ou manquant" -ForegroundColor Red
        }
        
        if ($firstEquipement.statutEquipement) {
            Write-Host "   Statut Libell√©: $($firstEquipement.statutEquipement.libelle)" -ForegroundColor Green
        } else {
            Write-Host "   ‚ùå Statut Equipement: NULL ou manquant" -ForegroundColor Red
        }
    }
    
} catch {
    Write-Host "‚ùå Erreur √©quipements: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 3: Endpoint des types d'√©quipements
Write-Host "`nüè∑Ô∏è Test 3: Endpoint des types d'√©quipements..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "https://localhost:7001/api/TypeEquipements" -Method Get -ErrorAction Stop
    Write-Host "‚úÖ Types d'√©quipements: $($response.Count) √©l√©ments r√©cup√©r√©s" -ForegroundColor Green
    
    if ($response.Count -gt 0) {
        Write-Host "   Premier type: $($response[0].libelle)" -ForegroundColor Gray
    }
} catch {
    Write-Host "‚ùå Erreur types d'√©quipements: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 4: Endpoint des statuts d'√©quipements
Write-Host "`nüìä Test 4: Endpoint des statuts d'√©quipements..." -ForegroundColor Cyan
try {
    $response = Invoke-RestMethod -Uri "https://localhost:7001/api/StatutsEquipement" -Method Get -ErrorAction Stop
    Write-Host "‚úÖ Statuts d'√©quipements: $($response.Count) √©l√©ments r√©cup√©r√©s" -ForegroundColor Green
    
    if ($response.Count -gt 0) {
        Write-Host "   Premier statut: $($response[0].libelle)" -ForegroundColor Gray
    }
} catch {
    Write-Host "‚ùå Erreur statuts d'√©quipements: $($_.Exception.Message)" -ForegroundColor Red
}

# R√©sum√© du diagnostic
Write-Host "`n" + "="*60 -ForegroundColor Green
Write-Host "üîç DIAGNOSTIC DU PROBL√àME FRONTEND" -ForegroundColor Green
Write-Host "="*60 -ForegroundColor Green

Write-Host "`nüí° Probl√®me identifi√©:" -ForegroundColor Yellow
Write-Host "   Le frontend essaie d'acc√©der √† 'libelle' sur des objets undefined" -ForegroundColor White
Write-Host "   Cela sugg√®re que les relations ne sont pas charg√©es correctement" -ForegroundColor White

Write-Host "`nüîß Solutions possibles:" -ForegroundColor Yellow
Write-Host "   1. V√©rifier que l'API inclut les relations (Include)" -ForegroundColor White
Write-Host "   2. V√©rifier que le frontend g√®re les valeurs null/undefined" -ForegroundColor White
Write-Host "   3. V√©rifier que les donn√©es de test sont correctement cr√©√©es" -ForegroundColor White

Write-Host "`nüåê URLs de test:" -ForegroundColor Cyan
Write-Host "   √âquipements: https://localhost:7001/api/Equipements" -ForegroundColor Gray
Write-Host "   Types: https://localhost:7001/api/TypeEquipements" -ForegroundColor Gray
Write-Host "   Statuts: https://localhost:7001/api/StatutsEquipement" -ForegroundColor Gray

Write-Host "`n" + "="*60 -ForegroundColor Green
