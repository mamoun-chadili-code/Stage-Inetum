// Script de test pour vÃ©rifier les nouvelles couleurs des statuts dans le module RÃ©seaux
console.log('ðŸŽ¨ Test des nouvelles couleurs des statuts RÃ©seaux...');

// Fonction getStatutStyle mise Ã  jour
const getStatutStyle = (statutLibelle) => {
  switch (statutLibelle?.toLowerCase()) {
    case 'en activitÃ©':
    case 'active':
      return { backgroundColor: '#4caf50', color: 'white' }; // Vert
    case 'suspendu':
      return { backgroundColor: '#ff9800', color: 'white' }; // Orange
    case 'en attente d\'agrÃ©ment':
    case 'en attente d\'agrÃ©mÃ©nt':
      return { backgroundColor: '#9e9e9e', color: 'white' }; // Gris
    case 'fermÃ©':
      return { backgroundColor: '#f44336', color: 'white' }; // Rouge
    default:
      return { backgroundColor: '#e0e0e0', color: '#333' }; // Gris clair par dÃ©faut
  }
};

// Test des statuts avec leurs nouvelles couleurs
const testStatuts = [
  'En activitÃ©',
  'Suspendu', 
  'En attente d\'agrÃ©ment',
  'FermÃ©',
  'Statut inconnu',
  null,
  undefined
];

console.log('ðŸŽ¨ Test des couleurs des statuts :');
testStatuts.forEach(statut => {
  const style = getStatutStyle(statut);
  const couleurNom = getCouleurNom(style.backgroundColor);
  console.log(`âœ… Statut: "${statut}" -> Couleur: ${couleurNom} (${style.backgroundColor})`);
});

// Fonction pour obtenir le nom de la couleur
function getCouleurNom(hexColor) {
  const couleurs = {
    '#4caf50': 'Vert',
    '#ff9800': 'Orange', 
    '#9e9e9e': 'Gris',
    '#f44336': 'Rouge',
    '#e0e0e0': 'Gris clair'
  };
  return couleurs[hexColor] || 'Inconnue';
}

// Test des cas spÃ©cifiques
console.log('\nðŸŽ¯ Test des cas spÃ©cifiques :');

// Test "En activitÃ©" - doit Ãªtre vert
const statutActif = getStatutStyle('En activitÃ©');
console.log(`âœ… "En activitÃ©" -> Vert: ${statutActif.backgroundColor === '#4caf50' ? 'OK' : 'ERREUR'}`);

// Test "Suspendu" - doit Ãªtre orange  
const statutSuspendu = getStatutStyle('Suspendu');
console.log(`âœ… "Suspendu" -> Orange: ${statutSuspendu.backgroundColor === '#ff9800' ? 'OK' : 'ERREUR'}`);

// Test "En attente d'agrÃ©ment" - doit Ãªtre gris
const statutAttente = getStatutStyle('En attente d\'agrÃ©ment');
console.log(`âœ… "En attente d'agrÃ©ment" -> Gris: ${statutAttente.backgroundColor === '#9e9e9e' ? 'OK' : 'ERREUR'}`);

// Test "FermÃ©" - doit Ãªtre rouge
const statutFerme = getStatutStyle('FermÃ©');
console.log(`âœ… "FermÃ©" -> Rouge: ${statutFerme.backgroundColor === '#f44336' ? 'OK' : 'ERREUR'}`);

// Test des variantes de casse
console.log('\nðŸ”¤ Test des variantes de casse :');
const variantes = ['EN ACTIVITÃ‰', 'en activitÃ©', 'En ActivitÃ©', 'SUSPENDU', 'suspendu'];
variantes.forEach(variante => {
  const style = getStatutStyle(variante);
  const couleurNom = getCouleurNom(style.backgroundColor);
  console.log(`âœ… "${variante}" -> ${couleurNom}`);
});

// Test des fallbacks
console.log('\nðŸ”„ Test des fallbacks :');
const statutInconnu = getStatutStyle('Statut inexistant');
console.log(`âœ… Statut inexistant -> Gris clair par dÃ©faut: ${statutInconnu.backgroundColor === '#e0e0e0' ? 'OK' : 'ERREUR'}`);

const statutNull = getStatutStyle(null);
console.log(`âœ… Statut null -> Gris clair par dÃ©faut: ${statutNull.backgroundColor === '#e0e0e0' ? 'OK' : 'ERREUR'}`);

console.log('\nðŸŽ‰ Tous les tests des couleurs des statuts sont terminÃ©s !');
console.log('ðŸ’¡ Les statuts RÃ©seaux ont maintenant les bonnes couleurs :');
console.log('   ðŸŸ¢ En activitÃ© -> Vert');
console.log('   ðŸŸ  Suspendu -> Orange');
console.log('   âš« En attente d\'agrÃ©ment -> Gris');
console.log('   ðŸ”´ FermÃ© -> Rouge');
console.log('   âšª Autres -> Gris clair par dÃ©faut');

console.log('\nðŸ“‹ Instructions :');
console.log('1. Ouvrez votre application React');
console.log('2. Naviguez vers le module RÃ©seaux');
console.log('3. VÃ©rifiez que les statuts ont les bonnes couleurs');
console.log('4. Testez dans la recherche et le formulaire');
console.log('5. Les points colorÃ©s doivent correspondre aux couleurs dÃ©finies');












